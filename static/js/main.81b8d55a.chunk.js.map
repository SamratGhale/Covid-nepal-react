{"version":3,"sources":["Chart.js","PieChart.js","FetchData.js","index.js"],"names":["ForMedia","chartData","month","week","window","matchMedia","matches","className","data","height","options","title","display","text","fontSize","Chart","props","state","this","Component","defaultProps","displayTitle","displayLegend","legendPosition","width","labels","maintainAspectRatio","PieChart","FetchData","loading","JSON","parse","localStorage","getItem","previousMonth","setItem","stringify","location","reload","thisMonth","thisWeek","all","lastWeek","weekBeforeThat","setState","url","fetch","responseWorld","response","json","dataWorld","slice","data2","dates","newCases","newDeaths","newRecovered","index","latest","map","item","indexOf","push","date","newRecoveries","newCases2","dates2","newDeaths2","newRecovered2","totalRecovered","totalRecoveries","totalDeaths","totalCases","chartData3","datasets","TotalConfirmed","TotalRecovered","TotalDeaths","backgroundColor","hoverBackgroundColor","hoverBorderColor","borderWidth","chartData2","label","console","log","Button","variant","color","onClick","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81b8d55a.chunk.js","sourcesContent":["import React,{Component} from 'react';\nimport {Line} from 'react-chartjs-2' ;\n\nconst ForMedia= ({chartData,month,week}) => {\n  const mql=window.matchMedia('(max-width:767px)')\n  if(mql.matches){\n    return (\n      <div className='chart' >\n      <Line\n      data={chartData}\n      height={350}\n      options={{\n        title:{\n          display:'Apple',\n            text:\"Nepal's timeline\",\n            fontSize:25\n        }\n      }}\n      />\n      </div>\n    )\n  }\n  else{\n    return (\n    <div className='chart' >\n    <Line\n    data={chartData}\n    options={{\n      title:{\n        display:'Apple',\n          text:\"Nepal's timeline\",\n          fontSize:25\n      }\n    }}\n    />\n    </div>\n  )\n\n  }\n}\nexport default class Chart extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      chartData:this.props.chartData,\n      month:props.month,\n      week:props.week,\n    }\n  }\n  static defaultProps = {\n    displayTitle:true,\n    displayLegend: true,\n    legendPosition:'right',\n  }\n\n\n  render(){\n    return (\n      <ForMedia chartData={this.props.chartData}/>\n    )\n  }\n}\n\n\n","import React,{Component} from 'react';\nimport {Doughnut} from 'react-chartjs-2' ;\n\nconst ForMedia=({chartData,displayTitle})=>{\n  const mql=window.matchMedia('(max-width:767px)')\n  if (mql.matches){\n    return (\n      <div className='chart' >\n      <Doughnut\n      data ={chartData}\n      width={100}\n      height={100}\n      options={{\n        labels:false,\n        maintainAspectRatio:true,\n          title:{\n            display:true,\n              text:displayTitle,\n              fontSize:25\n          },\n      }}\n      />\n      </div>\n    )}\n  else{\n    return (\n      <div className='chart' >\n      <Doughnut\n      data ={chartData}\n      options={{\n        maintainAspectRatio:true,\n          title:{\n            display:true,\n              text:displayTitle,\n              fontSize:25\n          },\n      }}\n      />\n      </div>\n    )\n\n  }\n}\n\n\nexport default class PieChart extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      chartData:props.chartData,\n      displayTitle:props.displayTitle\n    }\n  }\n  static defaultProps = {\n  }\n  render(){\n    return (\n      <ForMedia chartData={this.props.chartData} displayTitle={this.props.displayTitle}/>\n    )\n  }\n}\n\n\n","import './NewsBox.css'\nimport React from \"react\";\nimport Chart from './Chart';\nimport PieChart from './PieChart';\nimport Button from '@material-ui/core/Button';\n\nexport default class FetchData extends React.Component {\n\n\n  state={\n    loading:true,\n    week: JSON.parse(localStorage.getItem('week')) || 0,\n    month: JSON.parse(localStorage.getItem('month')) || 0,\n    data:null\n  }\n  previousMonth=()=>{\n    localStorage.setItem('month', JSON.stringify(2))\n    localStorage.setItem('week', JSON.stringify(0))\n    window.location.reload()\n  }\n  thisMonth=()=>{\n    localStorage.setItem('month', JSON.stringify(1))\n    localStorage.setItem('week', JSON.stringify(0))\n    window.location.reload()\n  }\n  thisWeek=()=>{\n    localStorage.setItem('month', JSON.stringify(0))\n    localStorage.setItem('week', JSON.stringify(1))\n    window.location.reload()\n  }\n  all=()=>{\n    localStorage.setItem('month', JSON.stringify(0))\n    localStorage.setItem('week', JSON.stringify(0))\n    window.location.reload()\n  }\n  lastWeek=()=>{\n    localStorage.setItem('month', JSON.stringify(0))\n    localStorage.setItem('week', JSON.stringify(2))\n    window.location.reload()\n  }\n  weekBeforeThat=()=>{\n    this.setState({week:3})\n    this.setState({month:0})\n    localStorage.setItem('month', JSON.stringify(0))\n    localStorage.setItem('week', JSON.stringify(3))\n    window.location.reload()\n  }\n  async componentDidMount(){\n    const url=\"https://data.nepalcorona.info/api/v1/covid/timeline?format=json\";\n    const urlWorld=\"https://api.covid19api.com/world\";\n    const responseWorld=await fetch(urlWorld)\n    const response=await fetch(url)\n    var data= await response.json()\n    const dataWorld= await responseWorld.json()\n    this.setState({data:data.slice(85,-1),dataWorld:dataWorld,loading:false})\n    const data2=data.slice(0,-2)\n    if (this.state.week){\n      this.state.data=data2.slice(-8-(this.state.week-1)*7,-1-(this.state.week-1)*7)\n    }\n    else if(this.state.month) {\n      this.state.data=data2.slice(-30-(this.state.month-1)*30,-1-(this.state.month-1)*30)\n    }\n\n    const dates=[]\n    const newCases=[]\n    const newDeaths=[]\n    const newRecovered=[]\n    const index=[]\n    const latest=this.state.dataWorld.slice(-1)\n    this.state.data.map(item=>(item['index']=this.state.data.indexOf(item))) \n    this.state.data.map(item=>(dates.push(item.date)))\n    this.state.data.map(item=>(index.push(item.index)))\n    this.state.data.map(item=>(newCases.push(item.newCases)))\n    this.state.data.map(item=>(newDeaths.push(item.newDeaths)))\n    this.state.data.map(item=>(newRecovered.push(item.newRecoveries)))\n    const newCases2=newCases \n    const dates2=dates \n    const newDeaths2=newDeaths \n    const newRecovered2=newRecovered \n    const totalRecovered=[]\n    this.state.data.map(item=>(totalRecovered.push(item.totalRecoveries)))\n    const totalDeaths=[]\n    this.state.data.map(item=>(totalDeaths.push(item.totalDeaths)))\n    const totalCases=[]\n    this.state.data.map(item=>(totalCases.push(item.totalCases)))\n    this.setState({\n      chartData3:{\n        labels:['active cases','new recovered','new deaaths'],\n        datasets:[\n          {\n            data:[latest[0].TotalConfirmed-latest[0].TotalRecovered-latest[0].TotalDeaths,latest[0].TotalRecovered,latest[0].TotalDeaths],\n            backgroundColor:[\n              'rgba(207,47,95)',\n              'rgba(193,232,0)',\n              'rgba( 26, 13, 0)',\n            ],\n            hoverBackgroundColor:'rgba(220,232,144)',\n            hoverBorderColor: 'rgba(0,220,220,1)',\n            borderWidth: 2,\n          }\n        ]\n      }\n    } )\n    this.setState({\n      chartData2:{\n        labels:['active cases','new recovered','new deaaths'],\n        datasets:[\n          {\n            data:[totalCases.slice(-1)-totalRecovered.slice(-1)-totalDeaths.slice(-1),totalRecovered.slice(-1),totalDeaths.slice(-1)],\n            backgroundColor:[\n              'rgba(207,47,95)',\n              'rgba(193,232,0)',\n              'rgba( 26, 13, 0)',\n            ],\n            hoverBackgroundColor:'rgba(220,232,144)',\n            hoverBorderColor: 'rgba(0,220,220,1)',\n            borderWidth: 2,\n          }\n        ]\n      }\n    } )\n\n\n    this.setState({\n      chartData:{\n        labels:dates2,\n        datasets:[\n          {\n            label:'new cases',\n            data:newCases2,\n            backgroundColor:[\n              'rgba(207,47,95,0.6)',\n            ]\n          },\n          {\n            label:'new recovered',\n            data:newRecovered2,\n            backgroundColor:[\n              'rgba(193,232,0)',\n            ]\n          },\n          {\n            label:'new deaths',\n            data:newDeaths2,\n            backgroundColor:[\n              'rgba(0, 0, 0, 1)',\n            ]\n          }\n        ]\n      }\n    } )\n  }\n\n  render(){\n    console.log(this.state.chartData)\n    return (\n      <div>{this.state.loading|| !this.state.data?(\n        <div> loading...</div>\n      ):(\n        <>\n        <div className='rowC' > \n        <div className='row1'>\n        <PieChart chartData={this.state.chartData2}displayTitle ={\"Nepal's data\"}  />\n        </div>\n        <div className='row2'>\n        <PieChart chartData={this.state.chartData3} displayTitle ={\"World's data\"} />\n        </div>\n        </div>\n        <Chart chartData={this.state.chartData} />\n        <div className=\"clicks\">\n        <Button variant=\"contained\" color=\"primary\" onClick={this.previousMonth}>\n        previous month\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.thisMonth}>\n        this month\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.thisWeek}>\n        this week\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.lastWeek}>\n        last week\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.weekBeforeThat}>\n       week before that  \n        </Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.all}>\n        all\n        </Button>\n        </div>\n\n        </>\n      )\n      }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport FetchData from './FetchData'\nReactDOM.render(\n  <FetchData/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}